{"version":3,"file":"static/js/324.5352e2c0.chunk.js","mappings":"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","sources":["webpack://Reenbit-Trainee-Camp/./src/components/AuthForms/ChangePasswordForm/changePasswordForm.module.css?5b47","components/AuthForms/ChangePasswordForm/ChangePasswordForm.jsx","components/Schemas/schemas.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"changePasswordForm_form__ibYd-\",\"form__title\":\"changePasswordForm_form__title__ZkVDF\",\"form__wrapper\":\"changePasswordForm_form__wrapper__ar-c-\",\"form__input\":\"changePasswordForm_form__input__oooBa\",\"form__input-error\":\"changePasswordForm_form__input-error__r7VeW\",\"form__icon-check\":\"changePasswordForm_form__icon-check__-eV-k\",\"form__icon-show\":\"changePasswordForm_form__icon-show__ULAvv\",\"form__btn\":\"changePasswordForm_form__btn__kMYRX\",\"form_text\":\"changePasswordForm_form_text__W33wl\"};","import { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useFormik, Formik, Form, Field } from \"formik\";\r\nimport { ImEye, ImEyeBlocked } from \"react-icons/im\";\r\nimport schemas from \"../../Schemas/schemas\";\r\nimport { changePassword } from \"../../../services/auth\";\r\nimport css from \"./changePasswordForm.module.css\";\r\nimport { onFetchError } from \"../../../services/NotifyMessages\";\r\nimport { selectId } from \"../../../redux/auth/selectors\";\r\n\r\nconst ChangePasswordForm = () => {\r\n  const [showPass, setShowPass] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const userinID = useSelector(selectId);\r\n\r\n  async function changePasswordUser(id, password) {\r\n    let isChangePasswordUser = window.confirm(\"Are you sure?\");\r\n    if (isChangePasswordUser) {\r\n      setIsLoading(true);\r\n      try {\r\n        const { date } = await changePassword(`${id}`, password);\r\n        formik.resetForm();\r\n        return date;\r\n      } catch (error) {\r\n        setError(error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  const onSubmit = (values) => {\r\n    setIsLoading(true);\r\n    const { password } = values;\r\n    changePasswordUser(userinID, password);\r\n    setIsLoading(false);\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      password: \"\",\r\n    },\r\n    validationSchema: schemas.schemasChangePassword,\r\n    onSubmit,\r\n  });\r\n\r\n  const isValid =\r\n    formik.errors.password && formik.touched.password ? true : false;\r\n\r\n  const showPassword = () => {\r\n    setShowPass(!showPass);\r\n  };\r\n\r\n  const showAccentValidateInput = (hasValue, isValide) => {\r\n    return !hasValue ? null : isValide ? \"#E2001A\" : \"#3CBC81\";\r\n  };\r\n  return <div className={css.backdrop}>\r\n      <div className={css.modal} onClick={(e) => e.stopPropagation()}>\r\n        <Formik validationSchema={schemas.schemasLogin}>\r\n          <Form\r\n            className={css.form}\r\n            name=\"form-changePassword\"\r\n            onSubmit={formik.handleSubmit}\r\n            autoComplete=\"off\"\r\n          >\r\n            <h1 className={css.form__title}>{\"Change Password\"}</h1>\r\n\r\n            <div className={css.form__wrapper}>\r\n              <Field\r\n                className={css.form__input}\r\n                style={{\r\n                  borderColor: showAccentValidateInput(\r\n                    formik.values.password,\r\n                    formik.errors.password\r\n                  ),\r\n                }}\r\n                name=\"password\"\r\n                type={showPass ? \"text\" : \"password\"}\r\n                placeholder=\"Password\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.password}\r\n                onBlur={formik.handleBlur}\r\n              />\r\n\r\n              <span className={css[\"form__icon-show\"]} onClick={showPassword}>\r\n                {!showPass ? <ImEyeBlocked /> : <ImEye />}\r\n              </span>\r\n              {formik.errors.password && formik.touched.password ? (\r\n                <div className={css[\"form__input-error\"]}>\r\n                  {formik.errors.password}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n            <button className={css.form__btn} type=\"submit\" disabled={isValid}>\r\n              {\"Change Password\"}\r\n            </button>\r\n          </Form>\r\n        </Formik>\r\n        {isLoading && <h1 style={{ textAlign: \"center\" }}>{\"Loading...\"}</h1>}\r\n        {error && onFetchError(\"Whoops, something went wrong\")}\r\n      </div>\r\n    </div>\r\n};\r\n\r\nexport default ChangePasswordForm;\r\n","import * as Yup from \"yup\";\r\n\r\nconst registerSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .matches(/^\\s*\\S+\\s*$/, \"Email must be without spaces\")\r\n    .matches(/\\S{7,}/, \"Email too short (min 7 symbols)\")\r\n    .matches(\r\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\r\n      \"Invalid email\"\r\n    )\r\n    .matches(\r\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\r\n      \"Dashes should only be inside email\"\r\n    )\r\n    .required(\"Require field\"),\r\n  password: Yup.string()\r\n    .min(7, \"Password too short (min 7)\")\r\n    .max(32, \"Password too long (max 32)\")\r\n    .matches(/^\\s*\\S+\\s*$/, \"Password must be without spaces\")\r\n    .required(\"Require field\"),\r\n  confirmPassword: Yup.string()\r\n    .oneOf([Yup.ref(\"password\")], \"Password must match\")\r\n    .required(\"Require field\"),\r\n  name: Yup.string()\r\n    .matches(/\\S{2,}/, \"Name too short (min 2)\")\r\n    .matches(\r\n      /((\\s*[a-zA-Z]+\\s*){2,}|[a-zA-Z]{2,})/,\r\n      \"Name must includes only Latin alphabet\"\r\n    )\r\n    .required(\"Require field\"),\r\n  phone: Yup.number()\r\n    .nullable(true)\r\n    .required(\"Require field\")\r\n    .min(99999)\r\n    .max(999999999999),\r\n  location: Yup.string()\r\n    .matches(\r\n      /(([A-Za-zsd&.-]){1,}, ([A-Za-zsd&,.-]){1,})/,\r\n      \"Invalid format. Example: Brovary, Kyiv ...\"\r\n    )\r\n    .required(\"Require field\"),\r\n});\r\n\r\nconst schemasLogin = Yup.object().shape({\r\n  email: Yup.string()\r\n    .matches(/^\\s*\\S+\\s*$/, \"Email must be without spaces\")\r\n    .matches(/\\S{7,}/, \"Email too short (min 7 symbols)\")\r\n    .matches(\r\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\r\n      \"Invalid email\"\r\n    )\r\n    .matches(\r\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\r\n      \"Dashes should only be inside email\"\r\n    )\r\n    .required(\"Require\"),\r\n  password: Yup.string()\r\n    .min(7, \"Password too short (min 7)\")\r\n    .max(32, \"Password too long (max 32)\")\r\n    .matches(/^\\s*\\S+\\s*$/, \"Password must be without spaces\")\r\n    .required(\"Require\"),\r\n});\r\n\r\nconst schemasChangePassword = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(7, \"Password too short (min 7)\")\r\n    .max(32, \"Password too long (max 32)\")\r\n    .matches(/^\\s*\\S+\\s*$/, \"Password must be without spaces\")\r\n    .required(\"Require\"),\r\n});\r\n\r\nconst schemas = {\r\n  registerSchema,\r\n  schemasLogin,\r\n  schemasChangePassword,\r\n};\r\n\r\nexport default schemas;"],"names":["ChangePasswordForm","showPass","setShowPass","useState","isLoading","setIsLoading","error","setError","userinID","useSelector","selectId","formik","useFormik","initialValues","password","validationSchema","schemas","schemasChangePassword","onSubmit","values","async","id","window","confirm","date","changePassword","resetForm","changePasswordUser","isValid","errors","touched","_jsx","className","css","backdrop","children","_jsxs","modal","onClick","e","stopPropagation","Formik","schemasLogin","Form","form","name","handleSubmit","autoComplete","form__title","form__wrapper","Field","form__input","style","borderColor","hasValue","isValide","type","placeholder","onChange","handleChange","value","onBlur","handleBlur","showPassword","ImEye","ImEyeBlocked","form__btn","disabled","textAlign","onFetchError","showAccentValidateInput","registerSchema","Yup","shape","email","matches","required","min","max","confirmPassword","oneOf","phone","nullable","location"],"sourceRoot":""}