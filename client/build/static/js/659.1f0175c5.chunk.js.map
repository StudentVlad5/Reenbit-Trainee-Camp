{"version":3,"file":"static/js/659.1f0175c5.chunk.js","mappings":"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","sources":["webpack://Reenbit-Trainee-Camp/./src/components/AuthForms/RegisterForm/registerForm.module.css?5625","components/AuthForms/RegisterForm/RegisterForm.jsx","components/Schemas/schemas.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"registerForm_form__kLhEy\",\"form__title\":\"registerForm_form__title__qkLYk\",\"form__wrapper\":\"registerForm_form__wrapper__jsHYd\",\"form__input\":\"registerForm_form__input__qR6Ab\",\"form__input-error\":\"registerForm_form__input-error__Ojwdh\",\"form__icon-check\":\"registerForm_form__icon-check__xQWQr\",\"form__icon-show\":\"registerForm_form__icon-show__29loy\",\"form__btn\":\"registerForm_form__btn__zmLRI\",\"form__btn--back\":\"registerForm_form__btn--back__M2txb\",\"form_text\":\"registerForm_form_text__DCIML\"};","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useFormik, Formik, Form, Field } from \"formik\";\r\nimport { FaCheck, FaTimes } from \"react-icons/fa\";\r\nimport { ImEye, ImEyeBlocked } from \"react-icons/im\";\r\nimport schemas from \"../../Schemas/schemas\";\r\nimport { register } from \"../../../redux/auth/operations\";\r\nimport css from \"./registerForm.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst RegisterForm = () => {\r\n  const [isShown, setIsShown] = useState(true);\r\n  const [showPass, setShowPass] = useState(false);\r\n  const [showConfirmPass, setShowConfirmPass] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = ({ values }) => {\r\n    setIsLoading(true);\r\n    const { name: userName, email, password, phone, location } = values;\r\n    dispatch(\r\n      register({\r\n        userName,\r\n        email,\r\n        password,\r\n        phone: phone.toString(),\r\n        location,\r\n      }),\r\n      setIsLoading(false)\r\n    );\r\n  };\r\n\r\n  const showForm = () => {\r\n    setIsShown(false);\r\n  };\r\n\r\n  const hideForm = () => {\r\n    setIsShown(true);\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      phone: \"\",\r\n      location: \"\",\r\n    },\r\n    validationSchema: schemas.registerSchema,\r\n    onSubmit: (values, action) => {\r\n      onSubmit({ values, action });\r\n    },\r\n  });\r\n\r\n  const isValid =\r\n    (formik.errors.email && formik.touched.email) ||\r\n    (formik.errors.password && formik.touched.password) ||\r\n    (formik.errors.confirmPassword && formik.touched.confirmPassword) ||\r\n    formik.values.email === \"\" ||\r\n    formik.values.confirmPassword === \"\"\r\n      ? true\r\n      : false;\r\n\r\n  const showPassword = () => {\r\n    setShowPass(!showPass);\r\n  };\r\n  const showConfirmPassword = () => {\r\n    setShowConfirmPass(!showConfirmPass);\r\n  };\r\n\r\n  const showAccentValidateInput = (hasValue, isValide) => {\r\n    return !hasValue ? null : isValide ? \"#E2001A\" : \"#3CBC81\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Formik validationSchema={schemas.registerSchema}>\r\n        <Form\r\n          className={css.form}\r\n          onSubmit={formik.handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <h1 className={css.form__title}>Sign in</h1>\r\n          {isShown && (\r\n            <div className={css.form__wrapper}>\r\n              <Field\r\n                className={css.form__input}\r\n                style={{\r\n                  borderColor: showAccentValidateInput(\r\n                    formik.values.email,\r\n                    formik.errors.email\r\n                  ),\r\n                }}\r\n                name=\"email\"\r\n                type=\"email\"\r\n                placeholder=\"Email\"\r\n                value={formik.values.email}\r\n                validate={schemas.registerSchema.email}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n              />\r\n\r\n              {!formik.values.email ? null : !formik.errors.email ? (\r\n                <FaCheck\r\n                  className={css[\"form__icon-check\"]}\r\n                  color={\"#3CBC81\"}\r\n                />\r\n              ) : (\r\n                <FaTimes\r\n                  className={css[\"form__icon-check\"]}\r\n                  color={\"#E2001A\"}\r\n                />\r\n              )}\r\n              {formik.errors.email && formik.touched.email ? (\r\n                <div className={css[\"form__input-error\"]}>\r\n                  {formik.errors.email}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          )}\r\n          {isShown && (\r\n            <div className={css.form__wrapper}>\r\n              <Field\r\n                className={css.form__input}\r\n                style={{\r\n                  borderColor: showAccentValidateInput(\r\n                    formik.values.password,\r\n                    formik.errors.password\r\n                  ),\r\n                }}\r\n                name=\"password\"\r\n                type={showPass ? \"text\" : \"password\"}\r\n                placeholder=\"Password\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.password}\r\n                onBlur={formik.handleBlur}\r\n              />\r\n\r\n              <span className={css[\"form__icon-show\"]} onClick={showPassword}>\r\n                {!showPass ? <ImEyeBlocked /> : <ImEye />}\r\n              </span>\r\n              {formik.errors.password && formik.touched.password ? (\r\n                <div className={css[\"form__input-error\"]}>\r\n                  {formik.errors.password}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          )}\r\n          {isShown && (\r\n            <div className={css.form__wrapper}>\r\n              <Field\r\n                className={css.form__input}\r\n                style={{\r\n                  borderColor: showAccentValidateInput(\r\n                    formik.values.confirmPassword,\r\n                    formik.errors.confirmPassword\r\n                  ),\r\n                }}\r\n                name=\"confirmPassword\"\r\n                type={showConfirmPass ? \"text\" : \"password\"}\r\n                placeholder=\"Confirm Password\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.confirmPassword}\r\n                onBlur={formik.handleBlur}\r\n              />\r\n              <span\r\n                className={css[\"form__icon-show\"]}\r\n                onClick={showConfirmPassword}\r\n              >\r\n                {!showConfirmPass ? <ImEyeBlocked /> : <ImEye />}\r\n              </span>\r\n              {formik.errors.confirmPassword &&\r\n              formik.touched.confirmPassword ? (\r\n                <div className={css[\"form__input-error\"]}>\r\n                  {formik.errors.confirmPassword}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          )}\r\n          {isShown && (\r\n            <button\r\n              className={css.form__btn}\r\n              type=\"button\"\r\n              onClick={showForm}\r\n              disabled={isValid}\r\n            >\r\n              Next\r\n            </button>\r\n          )}\r\n          {!isShown && (\r\n            <div className={css.form__wrapper}>\r\n              <Field\r\n                className={css.form__input}\r\n                style={{\r\n                  borderColor: showAccentValidateInput(\r\n                    formik.values.name,\r\n                    formik.errors.name\r\n                  ),\r\n                }}\r\n                name=\"name\"\r\n                type=\"text\"\r\n                placeholder=\"Name\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.name}\r\n                onBlur={formik.handleBlur}\r\n              />\r\n              {!formik.values.name ? null : !formik.errors.name ? (\r\n                <FaCheck\r\n                  className={css[\"form__icon-check\"]}\r\n                  color={\"#3CBC81\"}\r\n                />\r\n              ) : (\r\n                <FaTimes\r\n                  className={css[\"form__icon-check\"]}\r\n                  color={\"#E2001A\"}\r\n                />\r\n              )}\r\n              {formik.errors.name && formik.touched.name ? (\r\n                <div className={css[\"form__input-error\"]}>\r\n                  {formik.errors.name}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          )}\r\n          {!isShown && (\r\n            <div className={css.form__wrapper}>\r\n              <Field\r\n                className={css.form__input}\r\n                style={{\r\n                  borderColor: showAccentValidateInput(\r\n                    formik.values.location,\r\n                    formik.errors.location\r\n                  ),\r\n                }}\r\n                name=\"location\"\r\n                type=\"text\"\r\n                placeholder=\"Location, region\"\r\n                value={formik.values.location}\r\n                onBlur={formik.handleBlur}\r\n                onChange={(e) => {\r\n                  formik.handleChange(e);\r\n                }}\r\n              />\r\n              {!formik.values.location ? null : !formik.errors.location ? (\r\n                <FaCheck\r\n                  className={css[\"form__icon-check\"]}\r\n                  color={\"#3CBC81\"}\r\n                />\r\n              ) : (\r\n                <FaTimes\r\n                  className={css[\"form__icon-check\"]}\r\n                  color={\"#E2001A\"}\r\n                />\r\n              )}\r\n              {formik.errors.location && formik.touched.location ? (\r\n                <div className={css[\"form__input-error\"]}>\r\n                  {formik.errors.location}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          )}\r\n          {!isShown && (\r\n            <div className={css.form__wrapper}>\r\n              <Field\r\n                className={css.form__input}\r\n                style={{\r\n                  borderColor: showAccentValidateInput(\r\n                    formik.values.phone,\r\n                    formik.errors.phone\r\n                  ),\r\n                }}\r\n                id=\"phone\"\r\n                type=\"phone\"\r\n                placeholder=\"Mobile phone\"\r\n                onChange={formik.handleChange}\r\n                value={formik.values.phone}\r\n                onBlur={formik.handleBlur}\r\n                name=\"phone\"\r\n              />\r\n              {!formik.values.phone ? null : !formik.errors.phone ? (\r\n                <FaCheck\r\n                  className={css[\"form__icon-check\"]}\r\n                  color={\"#3CBC81\"}\r\n                />\r\n              ) : (\r\n                <FaTimes\r\n                  className={css[\"form__icon-check\"]}\r\n                  color={\"#E2001A\"}\r\n                />\r\n              )}\r\n              {formik.errors.phone && formik.touched.phone ? (\r\n                <div className={css[\"form__input-error\"]}>\r\n                  {formik.errors.phone}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          )}\r\n          {!isShown && (\r\n            <button className={css.form__btn} type=\"submit\">\r\n              Register\r\n            </button>\r\n          )}\r\n          {!isShown && (\r\n            <button\r\n              className={css[\"form__btn--back\"]}\r\n              type=\"button\"\r\n              onClick={hideForm}\r\n            >\r\n              Back\r\n            </button>\r\n          )}\r\n          <Link to={\"/login\"}>\r\n            <div className={css.form_text}>\r\n              <span>\r\n                Already have an account?{\" \"}\r\n                <span className={css[\"form_text--bold\"]}>Login</span>\r\n              </span>\r\n            </div>\r\n          </Link>\r\n        </Form>\r\n      </Formik>\r\n      {isLoading && <h1 style={{ textAlign: \"center\" }}>Loading...</h1>}\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default RegisterForm;\r\n","import * as Yup from \"yup\";\r\n\r\nconst registerSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .matches(/^\\s*\\S+\\s*$/, \"Email must be without spaces\")\r\n    .matches(/\\S{7,}/, \"Email too short (min 7 symbols)\")\r\n    .matches(\r\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\r\n      \"Invalid email\"\r\n    )\r\n    .matches(\r\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\r\n      \"Dashes should only be inside email\"\r\n    )\r\n    .required(\"Require field\"),\r\n  password: Yup.string()\r\n    .min(7, \"Password too short (min 7)\")\r\n    .max(32, \"Password too long (max 32)\")\r\n    .matches(/^\\s*\\S+\\s*$/, \"Password must be without spaces\")\r\n    .required(\"Require field\"),\r\n  confirmPassword: Yup.string()\r\n    .oneOf([Yup.ref(\"password\")], \"Password must match\")\r\n    .required(\"Require field\"),\r\n  name: Yup.string()\r\n    .matches(/\\S{2,}/, \"Name too short (min 2)\")\r\n    .matches(\r\n      /((\\s*[a-zA-Z]+\\s*){2,}|[a-zA-Z]{2,})/,\r\n      \"Name must includes only Latin alphabet\"\r\n    )\r\n    .required(\"Require field\"),\r\n  phone: Yup.number()\r\n    .nullable(true)\r\n    .required(\"Require field\")\r\n    .min(99999)\r\n    .max(999999999999),\r\n  location: Yup.string()\r\n    .matches(\r\n      /(([A-Za-zsd&.-]){1,}, ([A-Za-zsd&,.-]){1,})/,\r\n      \"Invalid format. Example: Brovary, Kyiv ...\"\r\n    )\r\n    .required(\"Require field\"),\r\n});\r\n\r\nconst schemasLogin = Yup.object().shape({\r\n  email: Yup.string()\r\n    .matches(/^\\s*\\S+\\s*$/, \"Email must be without spaces\")\r\n    .matches(/\\S{7,}/, \"Email too short (min 7 symbols)\")\r\n    .matches(\r\n      /^(?=.{7,63}$)([^а-яА-Я]+@([a-zA-Z]+\\.)+[a-zA-z]{2,3})$/g,\r\n      \"Invalid email\"\r\n    )\r\n    .matches(\r\n      /^[^-]+((.*[^-]))*@([a-zA-Z]+\\.)+[a-zA-z]{2,3}$/g,\r\n      \"Dashes should only be inside email\"\r\n    )\r\n    .required(\"Require\"),\r\n  password: Yup.string()\r\n    .min(7, \"Password too short (min 7)\")\r\n    .max(32, \"Password too long (max 32)\")\r\n    .matches(/^\\s*\\S+\\s*$/, \"Password must be without spaces\")\r\n    .required(\"Require\"),\r\n});\r\n\r\nconst schemasChangePassword = Yup.object().shape({\r\n  password: Yup.string()\r\n    .min(7, \"Password too short (min 7)\")\r\n    .max(32, \"Password too long (max 32)\")\r\n    .matches(/^\\s*\\S+\\s*$/, \"Password must be without spaces\")\r\n    .required(\"Require\"),\r\n});\r\n\r\nconst schemas = {\r\n  registerSchema,\r\n  schemasLogin,\r\n  schemasChangePassword,\r\n};\r\n\r\nexport default schemas;"],"names":["RegisterForm","isShown","setIsShown","useState","showPass","setShowPass","showConfirmPass","setShowConfirmPass","isLoading","setIsLoading","dispatch","useDispatch","formik","useFormik","initialValues","name","email","password","confirmPassword","phone","location","validationSchema","schemas","registerSchema","onSubmit","values","action","_ref","userName","register","toString","isValid","errors","touched","showAccentValidateInput","hasValue","isValide","_jsxs","_Fragment","children","_jsx","Formik","Form","className","css","form","handleSubmit","autoComplete","form__title","form__wrapper","Field","form__input","style","borderColor","type","placeholder","value","validate","onChange","handleChange","onBlur","handleBlur","FaTimes","color","FaCheck","onClick","showPassword","ImEye","ImEyeBlocked","showConfirmPassword","form__btn","showForm","disabled","e","id","hideForm","Link","to","form_text","textAlign","Yup","shape","matches","required","min","max","oneOf","nullable","schemasLogin","schemasChangePassword"],"sourceRoot":""}